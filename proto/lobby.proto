syntax = "proto3";

package lobby;

option csharp_namespace = "StereoMix.Lobby";
option cc_enable_arenas = true;

service LobbyService {
  // For User
  rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse);
  rpc QuickMatch(QuickMatchRequest) returns (QuickMatchResponse);
  rpc JoinRoom(JoinRoomRequest) returns (JoinRoomResponse);
  rpc JoinRoomWithCode(JoinRoomWithCodeRequest) returns (JoinRoomWithCodeResponse);
  rpc GetRoomList(GetRoomListRequest) returns (GetRoomListResponse);

  // For GameServer
  rpc UpdateRoomState(UpdateRoomStateRequest) returns (UpdateRoomStateResponse);
  rpc UpdateRoomConfig(UpdateRoomConfigRequest) returns (UpdateRoomConfigResponse);
  rpc ChangeRoomPassword(ChangeRoomPasswordRequest) returns (ChangeRoomPasswordResponse);
  rpc ChangeRoomOwner(ChangeRoomOwnerRequest) returns (ChangeRoomOwnerResponse);
  rpc DeleteRoom(DeleteRoomRequest) returns (DeleteRoomResponse);
  rpc ListenRoomUpdates(ListenRoomUpdatesRequest) returns (stream Room);
}

enum RoomState {
  ROOM_STATE_UNSPECIFIED = 0;
  ROOM_STATE_OPEN = 1;
  ROOM_STATE_PLAYING = 2;
  ROOM_STATE_CLOSED = 3;
}

enum RoomVisibility {
  ROOM_VISIBILITY_UNSPECIFIED = 0;
  ROOM_VISIBILITY_PUBLIC = 1;
  ROOM_VISIBILITY_PRIVATE = 2;
}

enum GameMode {
  GAME_MODE_UNSPECIFIED = 0;
  GAME_MODE_DEFAULT = 1;
}

enum GameMap {
  GAME_MAP_UNSPECIFIED = 0;
  GAME_MAP_DEFAULT = 1;
}

message RoomConnectionInfo {
  string host = 1;
  int32 port = 2;
}

message RoomConfig {
  string room_name = 1;
  RoomVisibility visibility = 3;
  GameMode mode = 4;
  GameMap map = 5;
}

message Room {
  string room_id = 1;
  string room_code = 2;
  string owner_id = 3;
  RoomConfig config = 5;
  RoomState state = 6;
  int32 max_players = 7;
  int32 current_players = 8;
  RoomConnectionInfo connection = 9;
  string game_version = 10;
}

// CreateRoom
message CreateRoomRequest {
  string game_version = 1;
  string room_name = 2;
  string password = 3;
  RoomConfig config = 4;
}

message CreateRoomResponse {
  RoomConnectionInfo connection = 1;
}

// QuickMatch
message QuickMatchRequest {
  string game_version = 1;
}

message QuickMatchResponse {
  RoomConnectionInfo connection = 1;
}

// JoinRoom
message JoinRoomRequest {
  string game_version = 1;
  string room_id = 2;
  string password = 3;
}

message JoinRoomResponse {
  RoomConnectionInfo connection = 1;
}

// JoinRoomWithCode
message JoinRoomWithCodeRequest {
  string game_version = 1;
  string room_code = 2;
}

message JoinRoomWithCodeResponse {
  RoomConnectionInfo connection = 1;
}

// GetRoomList
message GetRoomListRequest {
  string game_version = 1;
  RoomVisibility visibility = 2;
  GameMode mode = 3;
  GameMap map = 4;
}

message GetRoomListResponse {
  repeated Room rooms = 1;
}

// UpdateRoomState
message UpdateRoomStateRequest {
  RoomState state = 1;
}

message UpdateRoomStateResponse {
  RoomState updated_state = 1;
}

// UpdateRoomConfig
message UpdateRoomConfigRequest {
  RoomConfig config = 1;
}

message UpdateRoomConfigResponse {
  RoomConfig updated_config = 1;
}

// ChangeRoomPassword
message ChangeRoomPasswordRequest {
  string password = 1;
}

message ChangeRoomPasswordResponse {
  string room_id = 1;
}

// ChangeRoomOwner
message ChangeRoomOwnerRequest {
  string new_owner_id = 1;
}

message ChangeRoomOwnerResponse {
  string owner_id = 1;
}

// DeleteRoom
message DeleteRoomRequest {
}

message DeleteRoomResponse {
}

// ListenRoomUpdates
message ListenRoomUpdatesRequest {
}
